generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Roles {
  USER
  ADMIN
}

enum VideoAccessibility {
  PUBLIC
  PRIVATE
}

model User {
  id            String         @id @default(uuid())
  email         String         @unique
  firstName     String         @map("first_name")
  lastName      String         @map("last_name")
  password      String
  role          Roles          @default(USER)
  refreshTokens RefreshToken[]
  videos        Video[]
  createdAt     DateTime       @default(now()) @map("created_at")
  updatedAt     DateTime       @default(now()) @updatedAt @map("updated_at")

  @@map("users")
}

model RefreshToken {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @map("user_id")
  token     String
  createdAt DateTime @default(now()) @map("created_at")

  @@map("refresh_tokens")
}

model Video {
  id          String   @id @default(uuid())
  name        String
  description String
  author      User     @relation(fields: [authorId], references: [id])
  authorId    String   @map("author_id")
  videoKey    String   @map("video_key")
  videoUrl    String   @map("video_url")
  previewKey  String   @map("preview_key")
  previewUrl  String   @map("preview_url")
  duration    Int      @default(0)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("videos")
}
